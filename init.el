;; -----------------------------------------------------------------------------
;; A reasonable Emacs configuration files.
;; -----------------------------------------------------------------------------
(setq-default
  user-full-name "Jinghui Hu"
  user-mail-address "hujinghui@buaa.edu.cn"
  debug-on-error t)

;; -----------------------------------------------------------------------------
;; local settings
;; -----------------------------------------------------------------------------
(let ((pre-local-settings "~/.emacs.pre.el"))
  (when (file-exists-p pre-local-settings) (load-file pre-local-settings)))

;; setup local file
(defconst jh/init-file
  (expand-file-name "user-init.el" user-emacs-directory))
(defconst jh/cust-file
  (expand-file-name "user-custom.el" user-emacs-directory))

(when (file-exists-p jh/init-file)
  (setq-default user-init-file jh/init-file))
(when (file-exists-p jh/cust-file)
  (setq-default custom-file jh/cust-file))


(let ((mini-version "26.1"))
  (when (version< emacs-version mini-version)
    (error
      "This config supported mini version is v%s, upgrade your Emacs first"
      mini-version)))

(add-to-list 'load-path (expand-file-name "lisp" user-emacs-directory))

;; -----------------------------------------------------------------------------
;; bootstrap
;; -----------------------------------------------------------------------------
(require 'init-util)
(require 'init-package) ; call "package-initialize" here

;; -----------------------------------------------------------------------------
;; behavior
;; -----------------------------------------------------------------------------
(require 'init-abbrev)
(require 'init-basic)
(require 'init-desktop)
(require 'init-edit)

;; -----------------------------------------------------------------------------
;; plugin
;; -----------------------------------------------------------------------------
(require 'init-completion)
(require 'init-codetta)
(require 'init-dired)
(require 'init-elfeed)
(require 'init-git)
(require 'init-org)
(require 'init-projectile)
(require 'init-markdown)
(require 'init-query)
(require 'init-springboot)
(require 'init-angular)
(require 'init-yasnippet)
(require 'init-workflow)

;; -----------------------------------------------------------------------------
;; programming language
;; -----------------------------------------------------------------------------
(require 'init-cc)
(require 'init-csharp)
(require 'init-css)
(require 'init-csv)
(require 'init-dot)
(require 'init-file-creator)
(require 'init-go)
(require 'init-goal)
(require 'init-groovy)
(require 'init-html)
(require 'init-java)
(require 'init-javascript)
(require 'init-json)
(require 'init-nxml)
(require 'init-thrift)
(require 'init-lisp)
(require 'init-python)
(require 'init-sh)
(require 'init-sql)

;; -----------------------------------------------------------------------------
;; misc
;; -----------------------------------------------------------------------------
(require 'init-ffmpeg)
(require 'init-leetcode)
(require 'init-apidocs)
(require 'init-experimental)
(require 'init-keymate)
(require 'init-debug)

;; -----------------------------------------------------------------------------
;; local settings
;; -----------------------------------------------------------------------------
(let ((local-settings "~/.emacs.local.el"))
  (when (file-exists-p local-settings) (load-file local-settings)))

(provide 'init)

;; -----------------------------------------------------------------------------
;; the bottom part is auto generated by Emacs, DO NOT EDIT IT DIRECTLY!!!
;; -----------------------------------------------------------------------------
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(org-agenda-files
    '("~/work/hujinghui.jeffrey/orgfiles/offline/10-dorado-task.org" "/Users/bytedance/agenda/env-setup.org" "/Users/bytedance/agenda/learn.org" "/Users/bytedance/agenda/monthly-2023A.org" "/Users/bytedance/agenda/todos.org"))
 '(package-selected-packages
    '(ace-jump-mode adoc-mode ag auctex browse-at-remote browse-kill-ring color-theme-sanityinc-solarized color-theme-sanityinc-tomorrow company company-fuzzy counsel csharp-mode csv-mode cmake-mode cuda-mode dashboard dired-k docker docker-tramp dockerfile-mode dracula-theme edit-indirect editorconfig eglot elfeed elm-mode emmet-mode engine-mode evil evil-collection evil-commentary evil-leader evil-numbers exec-path-from-shell expand-region figlet fill-column-indicator flycheck flyspell-correct ggtags git-auto-commit-mode git-msg-prefix go-dlv go-mode go-tag gotest graphviz-dot-mode groovy-mode haskell-mode htmlize javadoc-lookup jetbrains-darcula-theme js-comint json-mode keycast keyfreq leetcode lua-mode magit magit-lfs magit-todos markdown-mode monokai-theme nyan-mode ob-go ob-tmux org-bullets org-table-comment pangu-spacing posframe projectile protobuf-mode pyim rainbow-delimiters realgud realgud-lldb request restclient rg sicp smex spacemacs-theme sql-indent sqlformat string-inflection swiper thrift tide verb vterm web-mode wgrep which-key yaml-mode yasnippet zenburn-theme)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(rainbow-delimiters-depth-1-face ((t (:foreground "#8d5649"))))
 '(rainbow-delimiters-depth-2-face ((t (:foreground "#d8241f"))))
 '(rainbow-delimiters-depth-3-face ((t (:foreground "#9564bf"))))
 '(rainbow-delimiters-depth-4-face ((t (:foreground "#24a222"))))
 '(rainbow-delimiters-depth-5-face ((t (:foreground "#ff7f00"))))
 '(rainbow-delimiters-depth-6-face ((t (:foreground "#1776b6"))))
 '(rainbow-delimiters-depth-7-face ((t (:foreground "#00bed1"))))
 '(rainbow-delimiters-depth-8-face ((t (:foreground "#bcbf00"))))
 '(rainbow-delimiters-depth-9-face ((t (:foreground "#e574c3"))))
 '(rainbow-delimiters-mismatched-face ((t (:background "#ffff99"))))
 '(rainbow-delimiters-unmatched-face ((t (:background "#d8241f")))))
