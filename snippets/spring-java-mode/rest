# -*- mode: snippet -*-
# name: Rest Spring Controller
# key: rest
# --
package `(jh/java-package-name)`;

import java.util.List;
import java.util.Map;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("${1:$(jh/java-ctrl-http-prefix yas-text)}")
public class ${1:`(jh/java-class-name)`} {

$>public static final Logger logger = LoggerFactory.getLogger($1.class);

$>private final ${3:${2:$(concat yas-text "Service")}} ${4:${3:$(jh/camelcase yas-text)}};

$>@Autowired
$>public $1($3 $4) {
$>$>this.$4 = $4;
$>}

$>@GetMapping("")
$>public List<${2:${1:$(jh/java-coerce-to-entity yas-text)}}> get${5:${2:$(jh/java-pluralize-entity yas-text)}}List(@RequestHeader HttpHeaders headers, @RequestParam Map<String, Object> params) {
$>$>return this.$4.findAll$5();
$>}

$>@ResponseStatus(HttpStatus.CREATED)
$>@PostMapping("")
$>public $2 post$5(@RequestHeader HttpHeaders headers, @RequestBody Map<String, Object> params) {
$>$>return this.$4.create$2(params);
$>}

$>@GetMapping("/{${6:${2:$(concat (jh/camelcase yas-text) "Id")}}}")
$>public $2 get$2(@RequestHeader HttpHeaders headers, @PathVariable long $6) {
$>$>return this.$4.findById($6);
$>}

$>@PutMapping("/{$6}")
$>public $2 put$2(@RequestHeader HttpHeaders headers, @PathVariable long $6, @RequestBody Map<String, Object> params) {
$>$>return this.$4.replace$2($6, params);
$>}

$>@ResponseStatus(HttpStatus.NO_CONTENT)
$>@DeleteMapping("/{$6}")
$>public void delete$2(@RequestHeader HttpHeaders headers, @PathVariable long $6) {
$>$>this.$4.delete$2($6);
$>}$0
}